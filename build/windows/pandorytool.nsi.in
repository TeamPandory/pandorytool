;--------------------------------
;Custom Variables

;Define name of the product
!define PRODUCT "PandoryTool"

;--------------------------------
;General information

;The name of the installer
Name "${PRODUCT}"

;The license that the user needs to accept to run the installer
LicenseData "..\..\LICENSE"

;The output file path of the installer to be created
OutFile "PandoryTool-Installer.exe"

;The default installation directory
InstallDir "C:\pandorytool"

;Registry key to check for a install directory from a previous installation
InstallDirRegKey HKLM "Software\${PRODUCT}" "Install_Dir"

;Request application privileges for admin level privileges
RequestExecutionLevel admin


;--------------------------------
;Installer pages

;Show a page where the user needs to accept a license
Page license
;Show a page where the user can customize the components to be installed
Page components
;Show a page where the user can customize the install directory
Page directory
;Show a page where the progress of the install is listed
Page instfiles


;--------------------------------
;Uninstaller pages

;Show a page where the user needs to confirm the uninstall
UninstPage uninstConfirm
;Show a page where the progress of the uninstall is listed
UninstPage instfiles


;--------------------------------
;Installer Components

;Main component
Section "PandoryTool Ultimate (VERSIONCODE)"

  ;Make this component mandatory so the user is not able to disable it
  SectionIn RO


  ;Write the selected (either default or customized) installation path into the
  ;registry
  WriteRegStr HKLM "Software\${PRODUCT}" "Install_Dir" "$INSTDIR"


  ;Set output path to the installation directory
  SetOutPath $INSTDIR

  ;Now you can list files that should be extracted to this output path or create
  ;directories:

  ;Copy a file to the current SetOutPath directory
  File /r "..\..\dist\*.*"


  ;Now you can create an uninstaller that will also be recognized by Windows:
  WriteRegStr   HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT}" "DisplayName"          "${PRODUCT}"
  WriteRegStr   HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT}" "UninstallString"      "$\"$INSTDIR\uninstall.exe$\""
  WriteRegStr   HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT}" "QuietUninstallString" "$\"$INSTDIR\uninstall.exe$\" /S"
  WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT}" "NoModify"        1
  WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT}" "NoRepair"        1
  WriteUninstaller "uninstall.exe"

  CreateShortcut "$INSTDIR\Start PandoryTool.lnk" '"$SYSDIR\cmd.exe"' "$INSTDIR" "$INSTDIR\etc\pandory.ico"
SectionEnd


;Optional component (can be disabled by the user)
Section /o "Optional: Desktop and Menu Shortcuts" SEC01
  CreateDirectory "$SMPROGRAMS\${PRODUCT}"
  CreateShortcut "$SMPROGRAMS\${PRODUCT}\Uninstall PandoryTool.lnk" "$INSTDIR\uninstall.exe"
  
  
  CreateShortcut "$SMPROGRAMS\PandoryTool.lnk" '"$SYSDIR\cmd.exe"' "$INSTDIR" "$INSTDIR\etc\pandory.ico"
  CreateShortcut "$SMPROGRAMS\${PRODUCT}\Open PandoryTool Folder.lnk" "$WINDIR\explorer.exe" "$INSTDIR"
  
  CreateShortcut "$DESKTOP\PandoryTool.lnk" '"$SYSDIR\cmd.exe"' "$INSTDIR" "$INSTDIR\etc\pandory.ico"
  CreateShortcut "$DESKTOP\Open PandoryTool Folder.lnk" "$WINDIR\explorer.exe" "$INSTDIR"
SectionEnd


;Uninstall component
Section "Uninstall"

  ;Remove registry keys that were set by the installer
  DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT}"
  DeleteRegKey HKLM "Software\${PRODUCT}"

  ;Remove files that were installed by the installer and the created uninstaller
  Delete "$INSTDIR\pandory.exe"
  Delete "$INSTDIR\*.bat"
  Delete "$INSTDIR\uninstall.exe"

  ;Remove shortcuts if existing
  Delete "$SMPROGRAMS\${PRODUCT}\*.*"
  Delete "$DESKTOP\PandoryTool.lnk"
  Delete "$DESKTOP\Open PandoryTool Folder.lnk"

  ;Remove directories that were created by the installer
  RMDir "$SMPROGRAMS\${PRODUCT}"
  RMDir /r "$INSTDIR\bin"
  RMDir /r "$INSTDIR\etc"
  RMDir /r "$INSTDIR\controls"
  RMDir /r "$INSTDIR\documentation"
  RMDir /r "$INSTDIR\no-shortcut-files"
  RMDir /r "$INSTDIR\scrapes"
  RMDir /r "$INSTDIR\scripts"
  RMDir "$INSTDIR"
SectionEnd

; Function that runs after the installer closes
Function .onInstSuccess
  ; Run the command after the installer closes
  Exec '"$WINDIR\explorer.exe" "$INSTDIR"'
FunctionEnd
